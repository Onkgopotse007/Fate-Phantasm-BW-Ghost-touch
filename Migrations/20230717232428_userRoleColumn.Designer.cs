// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RPG_dotnet.Data;

#nullable disable

namespace RPG_dotnet.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230717232428_userRoleColumn")]
    partial class userRoleColumn
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RPG_dotnet.Models.Characters", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("defense")
                        .HasColumnType("int");

                    b.Property<int>("fighterClass")
                        .HasColumnType("int");

                    b.Property<int>("hitpoints")
                        .HasColumnType("int");

                    b.Property<int>("intelligence")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("strength")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("name")
                        .IsUnique();

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("RPG_dotnet.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<byte[]>("passwordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("passwordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("userRole")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("userName")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RPG_dotnet.Models.UserCharacter", b =>
                {
                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.Property<int>("characterId")
                        .HasColumnType("int");

                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.HasKey("userId", "characterId");

                    b.HasIndex("characterId");

                    b.ToTable("UserCharacters");
                });

            modelBuilder.Entity("RPG_dotnet.Models.UserCharacter", b =>
                {
                    b.HasOne("RPG_dotnet.Models.Characters", "character")
                        .WithMany("userCharacters")
                        .HasForeignKey("characterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RPG_dotnet.Models.User", "user")
                        .WithMany("userCharacters")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("character");

                    b.Navigation("user");
                });

            modelBuilder.Entity("RPG_dotnet.Models.Characters", b =>
                {
                    b.Navigation("userCharacters");
                });

            modelBuilder.Entity("RPG_dotnet.Models.User", b =>
                {
                    b.Navigation("userCharacters");
                });
#pragma warning restore 612, 618
        }
    }
}
